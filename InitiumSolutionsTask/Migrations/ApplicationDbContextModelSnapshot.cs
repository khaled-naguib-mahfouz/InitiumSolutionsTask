// <auto-generated />
using System;
using InitiumSolutionsTask.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InitiumSolutionsTask.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InitiumSolutionsTask.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<double>("DiscountApplied")
                        .HasColumnType("float");

                    b.Property<int>("NumberOfRooms")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            BookingId = 1,
                            BranchId = 1,
                            CheckInDate = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2024, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            DiscountApplied = 0.0,
                            NumberOfRooms = 1
                        },
                        new
                        {
                            BookingId = 2,
                            BranchId = 2,
                            CheckInDate = new DateTime(2024, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2024, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 2,
                            DiscountApplied = 0.0,
                            NumberOfRooms = 2
                        });
                });

            modelBuilder.Entity("InitiumSolutionsTask.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<bool>("HasBookedBefore")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            HasBookedBefore = false,
                            Name = "John Doe",
                            NationalId = "222222",
                            PhoneNumber = "555-1234"
                        },
                        new
                        {
                            CustomerId = 2,
                            HasBookedBefore = false,
                            Name = "Jane Smith",
                            NationalId = "333333",
                            PhoneNumber = "555-5678"
                        });
                });

            modelBuilder.Entity("InitiumSolutionsTask.Models.HotelBranch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchId"));

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BranchId");

                    b.ToTable("HotelBranches");

                    b.HasData(
                        new
                        {
                            BranchId = 1,
                            BranchName = "Main Branch",
                            Location = "Downtown"
                        },
                        new
                        {
                            BranchId = 2,
                            BranchName = "Airport Branch",
                            Location = "Airport"
                        });
                });

            modelBuilder.Entity("InitiumSolutionsTask.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.HasIndex("BranchId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            BranchId = 1,
                            RoomNumber = "101",
                            RoomTypeId = 1
                        },
                        new
                        {
                            RoomId = 2,
                            BranchId = 1,
                            RoomNumber = "102",
                            RoomTypeId = 2
                        },
                        new
                        {
                            RoomId = 3,
                            BranchId = 2,
                            RoomNumber = "201",
                            RoomTypeId = 3
                        });
                });

            modelBuilder.Entity("InitiumSolutionsTask.Models.RoomBooking", b =>
                {
                    b.Property<int>("RoomBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomBookingId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");


                    b.Property<int>("NumberOfAdults")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfChildren")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("RoomBookingId");

                    b.HasIndex("BookingId");

                    b.HasIndex("RoomId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("RoomBookings");

                    b.HasData(
                        new
                        {
                            RoomBookingId = 1,
                            BookingId = 1,
                            NumberOfAdults = 1,
                            NumberOfChildren = 0,
                            RoomId = 1,
                            RoomTypeId = 1
                        },
                        new
                        {
                            RoomBookingId = 2,
                            BookingId = 2,
                            NumberOfAdults = 2,
                            NumberOfChildren = 1,
                            RoomId = 2,
                            RoomTypeId = 1
                        });
                });

            modelBuilder.Entity("InitiumSolutionsTask.Models.RoomType", b =>
                {
                    b.Property<int>("RoomTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomTypeId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomTypeId");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            RoomTypeId = 1,
                            Description = "A single room",
                            TypeName = "Single"
                        },
                        new
                        {
                            RoomTypeId = 2,
                            Description = "A double room",
                            TypeName = "Double"
                        },
                        new
                        {
                            RoomTypeId = 3,
                            Description = "A luxury suite",
                            TypeName = "Suite"
                        });
                });

            modelBuilder.Entity("InitiumSolutionsTask.Models.Booking", b =>
                {
                    b.HasOne("InitiumSolutionsTask.Models.HotelBranch", "HotelBranch")
                        .WithMany("Bookings")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InitiumSolutionsTask.Models.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("HotelBranch");
                });

            modelBuilder.Entity("InitiumSolutionsTask.Models.Room", b =>
                {
                    b.HasOne("InitiumSolutionsTask.Models.HotelBranch", "HotelBranch")
                        .WithMany("Rooms")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InitiumSolutionsTask.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HotelBranch");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("InitiumSolutionsTask.Models.RoomBooking", b =>
                {
                    b.HasOne("InitiumSolutionsTask.Models.Booking", "Booking")
                        .WithMany("RoomBookings")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InitiumSolutionsTask.Models.Room", "Room")
                        .WithMany("RoomBookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InitiumSolutionsTask.Models.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Room");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("InitiumSolutionsTask.Models.Booking", b =>
                {
                    b.Navigation("RoomBookings");
                });

            modelBuilder.Entity("InitiumSolutionsTask.Models.Customer", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("InitiumSolutionsTask.Models.HotelBranch", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("InitiumSolutionsTask.Models.Room", b =>
                {
                    b.Navigation("RoomBookings");
                });

            modelBuilder.Entity("InitiumSolutionsTask.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
